"""
    Even Fibonacci numbers.

    Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.
"""

from datetime import datetime


def time_delta(func):
    def inner(*args):
        t_init = datetime.now()
        ret = func(*args)
        t_final = datetime.now() - t_init
        print(f'{t_final.seconds}s | {t_final.microseconds}us')
        return ret
    return inner


def fib(n):
    a, b = 0, 1
    while a < n:
        yield a
        a, b = b, a+b


@time_delta
def even_calc_of_fib():
    print(sum(even for even in fib(4 * 10**6) if even % 2 == 0))


even_calc_of_fib()
